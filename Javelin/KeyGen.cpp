#include "KeyGen.h"

char CKeyGen::key0[32] = { 0xDC,0x03,0x08,0x00,0xDD,0xE0,0xB5,0x0C,0x08,0x00,0xC0,0x0E,0x2D,0xB3,0x20,0xA9,0x57,0x0C,0x0F,0xD8,0x07,0xAA,0x09,0xF0,0x06,0xFE,0x20,0xB0,0x08,0x00,0x47,0x09 };
char CKeyGen::key1[32] = { 0x1C,0xB3,0x21,0x12,0x2D,0xED,0xBD,0xDC,0xD8,0x0D,0xCD,0xDE,0xDD,0x01,0x11,0xA1,0x5A,0xAC,0xAF,0xDA,0x17,0x1A,0x79,0xF9,0x86,0xF7,0x26,0xB5,0x48,0x03,0x42,0x19 };
char CKeyGen::key2[32] = { 0x44,0xcc,0xaa,0x0a,0x0D,0x00,0x05,0x9C,0x99,0x99,0xC9,0x9E,0x29,0x93,0x29,0x99,0x97,0xaC,0x1F,0xa8,0x17,0xAA,0x09,0xF1,0xa6,0xaE,0x10,0xcc,0xD8,0xD0,0x4D,0xC9 };

char CKeyGen::iv0[32]  = { 0xB4,0x33,0x0A,0x12,0xEF,0x04,0xA4,0x1E,0x26,0xCF,0x2E,0xDF,0x09,0x33,0xBA,0xBA,0xB4,0x33,0x0A,0x12,0xEF,0x04,0xA4,0x1E,0x26,0xCF,0x2E,0xDF,0x09,0x33,0xBA,0xBA };
char CKeyGen::iv1[32]  = { 0x14,0x23,0x1A,0x1D,0xDF,0xD4,0xD4,0xE1,0xA6,0xCA,0xAE,0xBF,0xA9,0x3A,0xCA,0xCA,0xC4,0x3C,0x4A,0x14,0xE4,0x14,0xA3,0x17,0x27,0x99,0x28,0xD8,0x89,0x3B,0xBB,0xB2 };
char CKeyGen::iv2[32]  = { 0x24,0x13,0x2A,0xD2,0xED,0x0D,0xAE,0xEE,0x2A,0xAF,0x1E,0xDA,0x0A,0xA3,0xBC,0xBC,0xC4,0xC3,0x44,0x42,0x4F,0xA4,0xA5,0x18,0x29,0x88,0x8E,0x8F,0x79,0xB3,0xBA,0xBB };

CKeyGen::CKeyGen(void)
{
}

CKeyGen::~CKeyGen(void)
{
}

///WARNING: Make sure that input argument is allocated in caller (32 byte)
char* CKeyGen::Key( char* key )
{
	//See Drumlin5 > General.cs > GenerateHCK()
	for( int i=0; i<32; i++ )
	{
		key[i] = (( key0[i] ^ key1[i] ) & key2[i] );
	}
	return key;
}

///HCK IV
///WARNING: Make sure that input argument is allocated in caller (32 byte)
char* CKeyGen::Iv( char* iv )
{
	//See Drumlin5 > General.cs > GenerateHCK()
	for( int i=0; i<32; i++ )
	{
		iv[i] =  ((  iv0[i] ^  iv1[i] ) &  iv2[i] );
	}

	return iv;
}
